#!/usr/bin/env python

PACKAGE='tf_reconfigure'
import roslib;
roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator();
tf1 = gen.add_group("child");
tf2 = gen.add_group("g_child");
tf3 = gen.add_group("g_g_child");

tf1.add("x", double_t, 1, "x translation", 0, -1, 1);
tf1.add("y", double_t, 2, "y translation", 0, -1, 1);
tf1.add("z", double_t, 4, "z translation", 0, -1, 1);
tf1.add("yaw", double_t, 8, "yaw rotation", 0, -3.14, 3.14);
tf1.add("pitch", double_t, 16, "pitch rotation", 0, -3.14, 3.14);
tf1.add("roll", double_t, 32, "roll rotation", 0, -3.14, 3.14);

tf2.add("x2", double_t, 1, "x2 translation", 0, -1, 1);
tf2.add("y2", double_t, 2, "y2 translation", 0, -1, 1);
tf2.add("z2", double_t, 4, "z2 translation", 0, -1, 1);
tf2.add("yaw2", double_t, 8, "yaw2 rotation", 0, -3.14, 3.14);
tf2.add("pitch2", double_t, 16, "pitch2 rotation", 0, -3.14, 3.14);
tf2.add("roll2", double_t, 32, "roll2 rotation", 0, -3.14, 3.14);

tf3.add("x3", double_t, 1, "x3 translation", 0, -1, 1);
tf3.add("y3", double_t, 2, "y3 translation", 0, -1, 1);
tf3.add("z3", double_t, 4, "z3 translation", 0, -1, 1);
tf3.add("yaw3", double_t, 8, "yaw3 rotation", 0, -3.14, 3.14);
tf3.add("pitch3", double_t, 16, "pitch3 rotation", 0, -3.14, 3.14);
tf3.add("roll3", double_t, 32, "roll3 rotation", 0, -3.14, 3.14);

exit(gen.generate(PACKAGE, "tf_reconfigure", "tf"))


